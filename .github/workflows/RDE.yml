name: Windows-RDP-Updated

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360
    
    steps:
    - name: Download and Install Latest ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -Force
        Get-ChildItem -Path .\ngrok
        .\ngrok\ngrok.exe --version
      
    - name: Enable RDP Access
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "${{ secrets.RDP_PASSWORD }}" -Force)
      
    - name: Create ngrok Tunnel
      run: |
        .\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389 --log=stdout" -RedirectStandardOutput "ngrok.log" -NoNewWindow
        Start-Sleep -Seconds 10
        Get-Content ngrok.log
        
    - name: Display ngrok Tunnel Info
      run: |
        $apiOutput = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels
        $tunnelUrl = $apiOutput.tunnels.public_url
        Write-Host "NGROK TUNNEL URL: $tunnelUrl"
        Write-Host "Username: runneradmin"
        Write-Host "Password: (The password you set in RDP_PASSWORD secret)"
      
    - name: Keep RDP Connection Alive
      run: |
        while ($true) {
          Write-Host "Keeping session alive..."
          Start-Sleep -Seconds 600
        }
